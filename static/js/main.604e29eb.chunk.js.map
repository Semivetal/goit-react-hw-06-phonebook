{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","redux/contactForm/form-actions.js","redux/contactForm/form-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","console","log","actions","type","items","createReducer","state","filter","contact","_","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoreActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","formReducer","devTools","process","persistor","persistStore","connect","dispatch","onSubmit","formActions","useState","setName","setNumber","nameInputId","uuid","v1","numberInputId","handleChange","event","currentTarget","value","reset","preventDefault","foundNames","map","toLocaleLowerCase","lowerName","includes","alert","className","styles","contactForm","htmlFor","input","pattern","title","required","onChange","button","target","inputId","labelId","form","label","filterInput","getVisibleContacts","allContacts","lowerCasedFilter","onDeleteContact","contactList","contactItem","contactName","contactNumber","contactBtn","onClick","App","context","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.604e29eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__3W1dw\",\"form\":\"Filter_form__3Dxih\",\"label\":\"Filter_label__2R9II\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"context\":\"App_context__9k_Nu\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\n\nexport const addContact = createAction(\"contacts/add\", (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction(\"contacts/delete\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n/* \nexport const addContact = (name, number) => ({\n    type: types.ADD,\n    payload: {\n        id: shortid.generate(),\n        name,\n        number,\n    }\n});\n\nexport const deleteContact = contactId => ({\n    type: types.DELETE,\n    payload: contactId,\n});\n\nexport const changeFilter = value => ({\n    type: types.CHANGE_FILTER,\n    payload: value,\n}); \n*/\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"./form-actions\";\n\nconsole.log(actions.deleteContact.type);\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({ items, filter });\n\n/*\nconst items = (state = [], {type, payload}) => {\n    switch(type) {\n        case types.ADD:\n            return [...state, payload];\n        \n        case types.DELETE:\n            return state.filter(contact => contact.id !== payload);\n\n        default:\n            return state;\n    }\n};\n\n\nconst filter = (state = '', {type, payload}) => {\n    switch(type) {\n        case types.CHANGE_FILTER:\n            return payload;\n\n        default:\n            return state;\n    }\n}; \n*/\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport formReducer from \"./contactForm/form-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, formReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as formActions from \"../../redux/contactForm/form-actions\";\nimport { v1 as uuid, v1 } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\n\nfunction ContactForm({ contacts, onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = uuid(v1);\n  const numberInputId = uuid(v1);\n\n  const handleChange = (event) => {\n    const { value, name } = event.currentTarget;\n    if (name === \"name\") {\n      setName(value);\n    }\n    if (name === \"number\") {\n      setNumber(value);\n    }\n  };\n\n  const addContact = (name, number) => {\n    const foundNames = contacts.map((contact) =>\n      contact.name.toLocaleLowerCase()\n    );\n    const lowerName = name.toLocaleLowerCase();\n    if (foundNames.includes(lowerName)) {\n      return alert(`${name} is in contact list`);\n    }\n    onSubmit(name, number);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addContact(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.contactForm}>\n      <label htmlFor={nameInputId}>Name</label>\n      <input\n        className={styles.input}\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        id={nameInputId}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n\n      <label htmlFor={numberInputId}>Number</label>\n      <input\n        className={styles.input}\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        id={numberInputId}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(formActions.addContact(name, number)),\n});\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as formActions from \"../../redux/contactForm/form-actions\";\nimport { v1 as uuid, v1 } from \"uuid\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  const inputId = uuid(v1);\n  const labelId = uuid(v1);\n\n  return (\n    <>\n      <div className={styles.form}>\n        <label htmlFor={labelId} className={styles.label}>\n          Find contacts by\n        </label>\n        <input\n          id={inputId}\n          type=\"text\"\n          value={value}\n          name=\"filter\"\n          onChange={onChange}\n          className={styles.filterInput}\n        />\n      </div>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (event) => dispatch(formActions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as formActions from \"../../redux/contactForm/form-actions\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.contactList}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={styles.contactItem}>\n        <span className={styles.contactName}>{name}</span>\n        <span className={styles.contactNumber}>{number}</span>\n        <button\n          className={styles.contactBtn}\n          type=\"button\"\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const lowerCasedFilter = filter.toLocaleLowerCase();\n  return allContacts.filter((contact) =>\n    contact.name.toLocaleLowerCase().includes(lowerCasedFilter)\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(formActions.deleteContact(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  OnDeleteContact: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport styles from \"./App.module.css\";\n\nfunction App() {\n  return (\n    <div className={styles.context}>\n      <h1 className=\"text\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"text\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1_kcZ\",\"contactItem\":\"ContactList_contactItem__18LPY\",\"contactName\":\"ContactList_contactName__3GnCU\",\"contactNumber\":\"ContactList_contactNumber__2krR_\",\"contactBtn\":\"ContactList_contactBtn__W5Mir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__3sknm\",\"input\":\"ContactForm_input__24VaG\",\"contactForm\":\"ContactForm_contactForm__2NRwn\"};"],"sourceRoot":""}